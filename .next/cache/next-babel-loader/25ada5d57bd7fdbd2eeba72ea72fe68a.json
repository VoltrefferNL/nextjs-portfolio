{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/niels/Desktop/new-port/pages/blog.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport ProjectText from \"./content/ProjectText\";\nimport styles from \"./content/content.module.css\";\nimport Link from 'next/link';\nimport Date from '../components/date';\nimport { useRouter } from 'next/router';\n\nvar blog = function blog(_ref) {\n  _s();\n\n  var allPostsData = _ref.allPostsData;\n  var router = useRouter();\n  var tag = router.query.tag;\n  var tagsArr = allPostsData.filter(function (post) {\n    if (tag) {\n      return post.tags.includes(tag);\n    } else {\n      return post;\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, tag ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, __jsx(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }, __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 34\n    }\n  }, \" The list is currently filtered on \", tag, \" \"))) : \"\", __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, tagsArr.map(function (_ref2) {\n    var id = _ref2.id,\n        date = _ref2.date,\n        title = _ref2.title,\n        tags = _ref2.tags;\n    return __jsx(\"li\", {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, title)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }), __jsx(Date, {\n      dateString: date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }\n    }, tags.map(function (tag) {\n      return __jsx(Link, {\n        href: {\n          pathname: '/blog',\n          query: {\n            \"tag\": tag\n          }\n        },\n        as: \"/blog\",\n        key: tag,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 91\n        }\n      }, __jsx(\"button\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 94\n        }\n      }, tag)));\n    })));\n  }))));\n};\n\n_s(blog, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\nexport var __N_SSG = true;\nexport default blog;","map":{"version":3,"sources":["/home/niels/Desktop/new-port/pages/blog.js"],"names":["React","Layout","ProjectText","styles","Link","Date","useRouter","blog","allPostsData","router","tag","query","tagsArr","filter","post","tags","includes","map","id","date","title","pathname"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAeA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAsB;AAAA;;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AACjC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADiC,MAE1BI,GAF0B,GAEnBD,MAAM,CAACE,KAFY,CAE1BD,GAF0B;AAG/B,MAAME,OAAO,GAAGJ,YAAY,CAACK,MAAb,CAAoB,UAAAC,IAAI,EAAI;AAC1C,QAAIJ,GAAJ,EAAQ;AACV,aAAOI,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBN,GAAnB,CAAP;AAA+B,KAD7B,MAEG;AAAC,aAAOI,IAAP;AAAY;AACjB,GAJe,CAAhB;AAMD,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGJ,GAAG,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAwCA,GAAxC,MAAd,CAAL,CAAJ,GAA2F,EAFjG,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,OAAO,CAACK,GAAR,CAAY;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,QAAaC,KAAb,SAAaA,KAAb;AAAA,QAAoBL,IAApB,SAAoBA,IAApB;AAAA,WACX;AAAI,MAAA,GAAG,EAAEG,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYA,EAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,KAAJ,CADA,CADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIA,MAAC,IAAD;AAAM,MAAA,UAAU,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,IAAI,CAACE,GAAL,CAAS,UAACP,GAAD;AAAA,aAClB,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAACW,UAAAA,QAAQ,EAAE,OAAX;AAAoBV,UAAAA,KAAK,EAAE;AAAE,mBAAQD;AAAV;AAA3B,SAAZ;AAAwD,QAAA,EAAE,EAAG,OAA7D;AAAsE,QAAA,GAAG,EAAEA,GAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,GAAT,CAAH,CAAhF,CADkB;AAAA,KAAT,CAAN,CALD,CADW;AAAA,GAAZ,CADH,CAHJ,CADA,CADD;AAsBF,CA/BD;;GAAMH,I;UACWD,S;;;;AAgCjB,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport ProjectText from \"./content/ProjectText\";\nimport styles from \"./content/content.module.css\"\nimport { getSortedPostsData} from '../lib/posts'\nimport Link from 'next/link'\nimport Date from '../components/date'\nimport { useRouter } from 'next/router'\n\n\n\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData()\n    return {\n    props: {\n      allPostsData      \n    }\n  }\n}\n\n\n\nconst blog = ({ allPostsData }) => {\n  const router = useRouter()\n  const {tag} = router.query\n    const tagsArr = allPostsData.filter(post => {\n      if (tag){\n    return post.tags.includes(tag)}\n    else {return post}\n    }\n  );\n   return (\n    <Layout>\n    <section>\n      \n      {tag ?  <div><center><br /><h2> The list is currently filtered on {tag} </h2></center></div> : \"\"}\n        <ul>\n          {tagsArr.map(({ id, date, title, tags }) => (\n            <li key={id}>\n              <Link href=\"/posts/[id]\" as={`/posts/${id}`}>\n              <a>{title}</a></Link>\n              <br />\n            <Date dateString={date} />\n             <div>{tags.map((tag) => (\n          <Link href={{pathname: '/blog', query: { \"tag\" : tag}}} as ={\"/blog\"} key={tag}><a><button>{tag}</button></a></Link>\n        ))}</div>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n    </Layout>\n  );\n};\n\nexport default blog\n"]},"metadata":{},"sourceType":"module"}